#from server import Server
from vk_api.upload import VkUpload
from defs.profile_photo_cr import profile_create
from defs.bitcoin_check import first_check
from defs.get_animetop import anime_top
from game_body.persons import *

from config import vk_api_token
from game_body.inventory import * 
import inspect, os.path
import sys#—á–∏—Å—Ç–æ –¥–ª—è –º–µ–Ω—è

class RP:

    def messages_check(vk_api, text, peer_id, user_name, user_id, sex, chat_type, vk_session, pers_num):

        def face_member(user_name,user_id, vk_session):
            file_path = profile_create(user_name, user_id)
            upload = VkUpload(vk_session)
                                        
            photo = upload.photo_messages(file_path)
            owner_id = photo[0]['owner_id']
            photo_id = photo[0]['id']
            access_key = photo[0]['access_key']

            attachment = f'photo{owner_id}_{photo_id}_{access_key}'
            return(attachment)

        filename = inspect.getframeinfo(inspect.currentframe()).filename
        path_pr = os.path.dirname(os.path.abspath(filename))

        #if '–ª—É–∫–∞' in event.message['text'].lower():
        if '–ª—É–∫–∞' in text.lower():
            #Server.send_message(event.object.message['peer_id'], "–∫–∞—Ä—Ç–æ—à–∫–∞ –ø–∏–¥–∞—Ä–∞—Å")
            attachment=0
            vk_api.messages.send(peer_id=peer_id, message="–∫–∞—Ä—Ç–æ—à–∫–∞ –ø–∏–¥–∞—Ä–∞—Å" , random_id =0, attachment= attachment)

        if '–∫—É' in text.lower() or '–ø—Ä–∏–≤' in text.lower() or '–∑–¥–∞—Ä–æ–≤' in text.lower() or '–ø–æ–≥–Ω–∞' in text.lower():
            if chat_type> 0:
                vk_api.messages.send(peer_id=peer_id, message='–ø–æ–≥–Ω–∞–ª–∏ —Ä–µ–∞–ª—å–Ω–æ', random_id =0, keyboard=open(path_pr+"\keyboards\kb_start.json", "r", encoding="UTF-8").read())

        if '–∫–∞–∑–∏–Ω–æ' in text.lower():
            if chat_type> 0:
                global stage, bit_c
                stage=1
                bit_c = first_check()
                attachment=0
                message ='–Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Å—Ç–æ–π–æ—Å—Ç—å –±–∏—Ç–∫–æ–π–Ω–∞:'+bit_c+'\n–ø–æ–¥–Ω–∏–º–µ—Ç—Å—è –∏–ª–∏ –æ–ø—É—Å—Ç–∏—Ç—Å—è?'
                vk_api.messages.send(peer_id=peer_id, message=message , random_id =0, attachment= attachment, keyboard=open(path_pr+ "\keyboards\kb_bit.json", "r", encoding="UTF-8").read())

        if '–ø–æ–¥–Ω–∏–º–∏—Ç—Å—è' in text.lower() and stage==1:
           
            bit_c_sec = first_check()
            while bit_c_sec==bit_c:
                message='–µ—â—ë –Ω–µ –æ–±–Ω–æ–≤–∏–ª—Å—è...'
                vk_api.messages.send(peer_id=peer_id, message=message , random_id =0)
                bit_c_sec = first_check()
            if bit_c>bit_c_sec:
                message='—Ç—ã –ø—Ä–æ–∏–≥—Ä–∞–ª\n–±–∏—Ç–∫–æ–∏–Ω —É–ø–∞–ª –∏ —Ç–µ–ø–µ—Ä—å —Å—Ç–æ–∏—Ç:'+bit_c_sec
                vk_api.messages.send(peer_id=peer_id, message=message , random_id =0)
            else:
                message='—Ç—ã –ø–æ–±–µ–¥–∏–ª\n–±–∏—Ç–∫–æ–∏–Ω –ø–æ–¥–Ω—è–ª—Å—è –∏ —Ç–µ–ø–µ—Ä—å —Å—Ç–æ–∏—Ç:'+bit_c_sec
                vk_api.messages.send(peer_id=peer_id, message=message , random_id =0)
            stage=0

        if '!–ø—Ä–æ—Ñ–∏–ª—å' == text.lower():#–æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–≤–æ—é –µ–±—É—á–∫—É –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Å–æ –≤—Å–µ–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –∏ —Ç–¥
            file_path = profile_create(user_name, user_id)
            upload = VkUpload(vk_session)
                                        
            photo = upload.photo_messages(file_path)
            owner_id = photo[0]['owner_id']
            photo_id = photo[0]['id']
            access_key = photo[0]['access_key']

            attachment = f'photo{owner_id}_{photo_id}_{access_key}'
            message = '–∫–∞–º–Ω–µ–π:'+money_show(user_id)+'\n'+equiped_items_show(user_id)
            
            vk_api.messages.send(peer_id=peer_id, message=message , random_id =0, attachment= attachment)

        if '–æ–±–æ—Å—Å–∞—Ç—å –≤—Å–µ—Ö' in text.lower():
            if sex ==2 or sex ==0:
                message='[id{}|{}]'.format(user_id, user_name) + ' –æ–±–æ—Å—Å–∞–ª –≤—Å–µ—Ö'
                vk_api.messages.send(peer_id=peer_id, message=message , random_id =0)
            else:
                message='[id{}|{}]'.format(user_id, user_name) + ' –æ–±–æ—Å—Å–∞–ª–∞ –≤—Å–µ—Ö'
                vk_api.messages.send(peer_id=peer_id, message=message , random_id =0)

        if '–∞–Ω–∏–º–µ —Ç–æ–ø' in text.lower():
            message=anime_top()
            vk_api.messages.send(peer_id=peer_id, message=message , random_id =0)

        #==================================================
        #messages for game
        if  text.lower()=='—Å–æ–±–∏—Ä–∞—é –ø–∞—Ç–∏':
            global raid_stage
            raid_stage=True
            attachment = face_member(user_name,user_id, vk_session)
            message= user_name+' —Å–æ–±–∏—Ä–∞–µ—Ç –ø–∞—Ç–∏ –Ω–∞ —Ä–µ–π–¥'
            vk_api.messages.send(peer_id=peer_id, message=message , random_id =0, attachment= attachment, keyboard=open(path_pr+ "\keyboards\kb_party_collect.json", "r", encoding="UTF-8").read())
            
        
        if text.lower()=='—è –¥–¥' or text.lower()=='—è —Ç–∞–Ω–∫'or  text.lower()=='—è —Ö–∏–ª–µ—Ä' and raid_stage==True:
            person1=person_create(user_id, vk_api, text, peer_id)
            if person1.player_check(user_id)=='–ø—É—Å—Ç–∏—Ç—å':
                attachment = face_member(user_name,user_id, vk_session)
                message= user_name+' –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ —Ä–µ–π–¥—É'

        if text.lower()=='–∑–∞–ø—É—Å–∫–∞–µ–º –ø–æ–¥–∑–µ–º–µ–ª—å–µ' and raid_stage==True:
            raid_stage==False
            from server_game import Server_game
            from config import vk_api_token


            server_game1 = Server_game(vk_api_token, 186777464, "server_game1")
          
            server_game1.start()



        if '!—É—á–∞–≤—Å—Ç–≤—É—é' in text.lower():
            #server_sec1 = Server_sec(vk_api_token, 186777464, "server_sec1")
            #server_sec1.start()  –≤—Ç–æ—Ä–æ–π –ø–æ—Ç–æ–∫ –¥–ª—è —Å—Ç–∞–¥–∏–∏ –±–∏—Ç–≤—ã
            pers_num+=1
            #class_p = text.split()[1]
            #person1=person_create(user_id, vk_api, class_p, peer_id)
            person1=person_create(user_id, vk_api, peer_id)
            person1.show_player_list()
            person1.data_show(user_id)

        #========================================================
        #inventory message
        if  '!–Ω–∞–¥–µ—Ç—å' in text.lower() and chat_type > 0:
            message = item_equip(user_id, text.split()[1])
            vk_api.messages.send(peer_id=peer_id, message=message , random_id =0)

        if text.lower() == '!—Å—É–Ω–¥—É–∫':
            message = inventory_show(user_id)
            vk_api.messages.send(peer_id=peer_id, message=message , random_id =0)
            
            
        if text.lower() == '!–∏–Ω–≤–µ–Ω—Ç–∞—Ä—å':
            message = inventory_show(user_id)
            vk_api.messages.send(peer_id=peer_id, message=message , random_id =0)

        if text.lower() == '–æ—Ç–∫—Ä—ã—Ç—å –∫–µ–π—Å' and chat_type > 0:
            global loot, sell_check
            sell_check=True
            loot = case_open(user_id)
            print('–ª—É—É—Ç:'+str(loot))
            message = '–≤–∞–º –≤—ã–ø–∞–ª–æ:'+ loot[0]
            vk_api.messages.send(peer_id=peer_id, message=message , random_id =0, keyboard=open(path_pr+"\keyboards\kb_sell.json", "r", encoding="UTF-8").read())

            #inventory_upload(user_id)

        if text.lower() == '–ø—Ä–æ–¥–∞—Ç—å' and chat_type > 0 and sell_check==True:
            sell_item(user_id, loot[1])
            sell_check=False
            message = '—Ç–µ–ø–µ—Ä—å —É —Ç–µ–±—è:' +str(money_show(user_id))+'üóø –∫–∞–º–Ω–µ–π'
            vk_api.messages.send(peer_id=peer_id, message=message , random_id =0)

            
        if text.lower() =='!!–ø—Ä–æ–¥–∞—Ç—å':
            item_id = text.split()[1]
            
            sell_item(user_id, item_id)

        if text.lower() =='!–æ—Ñ–∞–π!':
            sys.exit()
        
        

            
